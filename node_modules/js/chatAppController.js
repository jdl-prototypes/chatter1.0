var chatApp = angular.module('chatApp', ['luegg.directives']);

chatApp.directive('focusOn', function() {
   return function(scope, elem, attr) {
      scope.$on('focusOn', function(e, name) {
        if(name === attr.focusOn) {
          elem[0].focus();
        }
      });
   };
});

chatApp.factory('focus', function ($rootScope, $timeout) {
  return function(name) {
    $timeout(function (){
      $rootScope.$broadcast('focusOn', name);
    });
  }
});

chatApp.controller('LoginController', function($scope, focus){
	$scope.userID = '';

	$scope.firstName = '';
	$scope.lastName = '';
	$scope.initials = '';
	$scope.bgcolor='#F44336';
	$scope.boxColor='';
	$scope.colors = ['F44336','E91E63','9C27B0','673AB7','3F51B5',
		'2196F3','03A9F4','00BCD4','009688','4CAF50','8BC34A','FF5722',
		'795548','607D8B','333333'];
	$scope.showModal = true;
	$scope.false = false;
	$scope.showNotificationModal = false;
	$scope.showUserList = true;
	$scope.styleButtonActive ='';
	$scope.styleUserListButton = {'background-color':'rgba(0,0,0,.7)'};
	$scope.notificationCounter = '';
	$scope.notificationItemCount = '';
	$scope.sound = true;

	$scope.usersList = [];
	$scope.notificationList = [];
	$scope.chatSessionList = [];
	$scope.socket = io();

	$scope.styleNotification = '';
	$scope.styleNotificationIcon = '';
	$scope.styleUserListIcon = {'fill':'#FFF'};

	$scope.searchUser = '';




	$scope.isRegisteredAlready = function(){
		
		var fName= localStorage.getItem('firstName');
		var lName = localStorage.getItem('lastName');
		var dpColor = localStorage.getItem('dpColor');
		var initials = localStorage.getItem('initials');
		var returnValue = false;

		if(fName && lName && dpColor && initials){
			$scope.firstName = fName;
			$scope.lastName = lName;
			$scope.initials = initials;
			$scope.boxColor = {'background-color':dpColor};
			$scope.bgcolor = dpColor;
			returnValue = true;	
		}

		return returnValue;
	}

	$scope.change = function(){
		$scope.initials = angular.uppercase($scope.firstName.substring(0,1) + $scope.lastName.substring(0,1));
	}

	$scope.setColor = function(color){
		$scope.bgcolor  = '#'+ color;
		$scope.boxColor = {'background-color':$scope.bgcolor};
	}

	$scope.toggleNotification = function(){
		$scope.showNotificationModal = !$scope.showNotificationModal;
		$scope.notificationCounter = '';
		if($scope.showNotificationModal==true){
			$scope.styleNotification = {'background-color':'rgba(0,0,0,.7)'};
			$scope.styleNotificationIcon = {'fill':'#FFF'};
		}else{
			$scope.styleNotification = '';
			$scope.styleNotificationIcon = '';
		}
		
	}


	$scope.toggleSessionButton = function(id, key){
		var index = $scope.findData($scope.chatSessionList, 'ID',id,'index');
		if(index!==false && key.trim()!=null){
			var btnState = $scope.chatSessionList[index].Controls.Buttons[key];
			$scope.chatSessionList[index].Controls.Buttons[key] = !btnState;
		}
	}
	

	$scope.toggleUserList = function(){
		$scope.showUserList = !$scope.showUserList;
		if($scope.showUserList==true){
			$scope.styleUserListButton = {'background-color':'rgba(0,0,0,.7)'};
			$scope.styleUserListIcon= {'fill':'#FFF'};
		}else{
			$scope.styleUserListButton = '';
			$scope.styleUserListIcon = {'fill':'#999'};
		}

	}

	$scope.saveDataToLocalStorage = function(){
		localStorage.setItem('firstName',$scope.firstName);
		localStorage.setItem('lastName', $scope.lastName);
		localStorage.setItem('initials', $scope.initials);
		localStorage.setItem('dpColor', $scope.bgcolor);
	}

	$scope.deleteLocalData = function(){
		localStorage.setItem('firstName','');
		localStorage.setItem('lastName', '');
		localStorage.setItem('initials', '');
		localStorage.setItem('dpColor', '');
	}

	$scope.register = function(){
		if($scope.firstName.trim()=='' || $scope.lastName.trim()==''){
			alert('All fields are required!');
		}else{
			$scope.saveDataToLocalStorage();
			alert('Registered Successfuly!');
		}
	}

	$scope.deleteAccount = function(){
		$scope.deleteLocalData();
		$scope.isRegisteredAlready();
		$scope.firstName='';
		$scope.lastName='';
		$scope.boxColor = {'background-color':'#F44336'};
		$scope.initials='';
	}

	$scope.login = function(){
		$scope.socket.emit('login',{'firstName':$scope.firstName, 
			'lastName':$scope.lastName, 'initials':$scope.initials, 
			'dpColor':$scope.bgcolor
		});
	}

	$scope.addNotification = function(uID, message){
		$scope.notificationCounter++;
		$scope.notificationItemCount++;
		$scope.notificationList.push({'NotificaitonID':$scope.notificationItemCount, 'UserID':uID, 'Message':message});
	}

	$scope.createChatSession = function(id, isCallBack){
		isCallBack = isCallBack || false;
		var index = $scope.findData($scope.chatSessionList, 'ID',id,'index');
		if(index===false){
			var user = $scope.usersList[id];
			user['ChatSessionStatus']=true;
			user['Controls'] = ['Buttons','Files'];
			user['Controls']['Buttons'] = {'BtnInsertImageState':false,'BtnSmileyState':false};
			user['Controls']['Files']='';
			
			$scope.chatSessionList.push(user);
			
			index = $scope.findData($scope.chatSessionList, 'ID',id,'index');
			//var uID = id;
			if(index!==false){
				$scope.chatSessionList[index]['ChatMessages'][id]=[];
				if(!isCallBack){
					focus('focusMe'+id);
				}
				
			}
		}else{
			$scope.chatSessionList[index]['ChatSessionStatus']=true;
			if(!isCallBack){
				focus('focusMe'+id);	
			}
			
		}
	
	}

	$scope.minimizeChat = function(id){
		var index = $scope.findData($scope.chatSessionList, 'ID',id,'index');
		if(index!==false){
			$scope.chatSessionList[index]['ChatSessionStatus']=!$scope.chatSessionList[index]['ChatSessionStatus'];
			if($scope.chatSessionList[index]['ChatSessionStatus']==true){
				focus('focusMe'+id);
			}
		}
	}

	$scope.deleteChatSession = function(id){
		var index = $scope.findData($scope.chatSessionList, 'ID',id,'index');
		if(index!==false){
			$scope.chatSessionList.splice(index, 1);
		}
	}

	$scope.processPrivateMessage = function(recipientID, senderID, message){
		var returnValue = false;
		if(message.trim()!=''){
			var index = $scope.findData($scope.chatSessionList, 'ID',recipientID,'index');
			if(index!==false){
				$scope.chatSessionList[index]['ChatMessages'][recipientID].push({'UserID':senderID,'Message':message});
				if(recipientID!=senderID){
					$scope.chatSessionList[index]['Txt']='';
				}
				$scope.glued = true;
			}
			returnValue=true;
		}

		return returnValue;
	}

	$scope.sendPrivateMessage = function(recipientID, senderID, message){
		if($scope.processPrivateMessage(recipientID, senderID, message)){
			$scope.socket.emit('sendPrivateMessage',recipientID, senderID, message);
		}
	}

	$scope.findData = function(array, index, value, returnIndex, begin){
		begin = begin || 0;
		returnIndex = returnIndex || null;
		var condition =array.length;
		var returnValue = false;

		for(var i=begin;i<condition;i++){
			var data = array[i];
			if(data[index]==value){
				if(returnIndex===null){
					returnValue=true;
				}else if(returnIndex=='index'){
					returnValue=i;
				}else{
					returnValue=data[returnIndex];
				}
				break;
			}
		}
		return returnValue;
	}


	$scope.socket.on('callBackLogin', function(data){
		if(data.UserID!=null){
			$scope.userID = data.UserID;
			$scope.usersList = data.UserLists;
			$scope.showModal = false;
			$scope.addNotification($scope.userID, 'Welcome to the Chatter '+$scope.usersList[$scope.userID].firstName+ '! :)');
			$scope.$apply();
			alert('Login successfully!');
			
		}else{
			alert('Failed to login. Please try again.');
		}
	});

	$scope.socket.on('broadCastNewUsers',function(data){
		var id = $scope.findUser(data);
		if(id===false){
			$scope.usersList.push(data);
			$scope.addNotification(data.ID, data.firstName+' has logged in.');
			$scope.$apply();
		}else{
			
			if(data.Status==1 && $scope.usersList[id]['Status']==0){
				$scope.addNotification($scope.usersList[id].ID, $scope.usersList[id].firstName+' is back.');
			}

			$scope.usersList[id]['Status']=data['Status'];

			if($scope.usersList[id]['Status']==0){
				$scope.addNotification($scope.usersList[id].ID, $scope.usersList[id].firstName+' has logged out.');
			}
			$scope.$apply();
		}

	});

	$scope.socket.on('callBackConnect',function(data){
		$scope.usersList = data.UserLists;
		$scope.$apply();

	});

	$scope.socket.on('callBackPrivateMessage',function(senderID, message){
		$scope.createChatSession(senderID, true);
		$scope.processPrivateMessage(senderID, senderID, message);
		$scope.notifyMe(senderID, $scope.usersList[senderID].firstName + " " + $scope.usersList[senderID].lastName, message);
		$scope.playSound();
		$scope.$apply();
	});


	$scope.findUser = function(data){
		var returnValue=false;
		
		for(var i=1;i<$scope.usersList.length;i++){
			var user = $scope.usersList[i];
			if(user['ID']==data['ID']){
				returnValue=data['ID'];break;
			}
		}
		return returnValue;
	}

	$scope.notifyMe = function(senderID, senderName, message) {
	  if (!Notification) {
	    alert('Notifications are supported in modern versions of Chrome, Firefox, Opera and Firefox.'); 
	    return;
	  }

	  if (Notification.permission !== "granted")
	    Notification.requestPermission();
		var msgLength = message.length;
		var notification = new Notification(senderName, {
			icon: '/chatIcon',
			body: message.substring(0,20) + (msgLength>20?'...':''),
	  	});

		notification.onclick = function () {
			window.focus();
			focus('focusMe'+senderID);   
		};

	  setTimeout(function () {notification.close()}, 3000);
	}

	$scope.playSound = function(url){   
		
		if($scope.sound){
			var audio = document.getElementById('notificationSound');
			audio.play();
			$scope.$apply();
		}
		
	}


});